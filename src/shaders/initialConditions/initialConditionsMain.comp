bool insideAnyShape(int currentShape)
{
	if (shapes[currentShape] == 0)
		return insideCircle(currentShape);
	else if (shapes[currentShape] == 1)
		return insideTriangle(currentShape);
	else if (shapes[currentShape] == 2)
		return insideHexagon(currentShape);

	return false;
}

void main()
{
	ivec2 pixel_coords = ivec2(gl_GlobalInvocationID.xy);
	//vec4 existingPixel = imageLoad(texture, pixel_coords);

	int currentShape = 0;

	while (currentShape < MAX_SHAPE && shapes[currentShape] != -1)
	{
		if (insideAnyShape(currentShape))
		{
			//vec4 existingPixel = 1.0;
			imageStore(texture, pixel_coords, vec4(1.0, 1.0, 1.0, 1.0));
			break;
		}

		currentShape++;
	}

}
